name: 'Build and Tag'
description: 'Creates versioned tags with date prefix for releases'
author: 'chengzao'

inputs:
  token:
    description: 'GitHub token for creating tags and changelog'
    required: true
  prefix:
    description: 'Prefix name to use in tag name'
    required: false
    default: 'release'
  git_user_name:
    description: 'Git user name for commits and tags'
    required: false
    default: 'github-actions'
  git_user_email:
    description: 'Git user email for commits and tags'
    required: false
    default: 'github-actions@github.com'

outputs:
  tag_name:
    description: 'The name of the created tag'
    value: ${{ steps.create_tag.outputs.tag_name }}
  tag_created:
    description: 'Whether the tag was created successfully'
    value: ${{ steps.create_tag.outputs.tag_created }}
runs:
  using: 'composite'
  steps:
    - name: Validate Node.js environment
      run: |
        echo ""
        echo "============== 🏷️ Validate Node.js environment =============="
        if ! command -v node &> /dev/null; then
          echo "❌ Node.js is not installed or not in PATH"
          exit 1
        fi

        if ! command -v npm &> /dev/null; then
          echo "❌ npm is not installed or not in PATH"
          exit 1
        fi

        echo "✅ Node.js environment validation passed"
        echo "📦 Node.js version: $(node --version)"
        echo "📦 npm version: $(npm --version)"
      shell: bash

    - name: Verify trigger Info
      run: |
        echo ""
        echo "=================== 🏷️ Verify trigger Info ==================="
        echo "📁 事件类型: ${{ github.event_name }}"
        echo "🏠 仓库: ${{ github.repository }}"
        echo "👤 工作流发起者: ${{ github.actor }}"
        echo "🔍 事件发送者: ${{ github.event.sender.login }}"
        echo "🌿 当前分支: ${{ github.ref_name }}"
        echo "👤 提交作者: ${{ github.event.head_commit.author.name || 'N/A' }}"
        echo "📅 提交时间: ${{ github.event.head_commit.timestamp || 'N/A' }}"
        echo "🔗 提交URL: ${{ github.event.head_commit.url || 'N/A' }}"
      shell: bash

    - name: Create a release tag
      id: create_tag
      run: |
        echo ""
        echo "=================== 🏷️ Creating release tag ==================="
        git config --global user.name "$GIT_USER_NAME"
        git config --global user.email "$GIT_USER_EMAIL"

        # 当日日期
        DATE=$(date +"%Y_%m_%d")

        # 分支名称
        CURRENT_BRANCH="$INPUT_PREFIX"

        # 获取最新版本号
        LATEST_TAG=$(git tag -l "${CURRENT_BRANCH}_${DATE}_v*" | sort -V | tail -n1)
        # 如果今天还没有版本, 从v1开始
        if [ -z "$LATEST_TAG" ]; then
            VERSION=1
        else
            # 提取现有的最大版本
            VERSION=${LATEST_TAG#*v}
            # 递增版本号
            ((VERSION++))
        fi

        # 创建新的标签名
        TAG_NAME="${CURRENT_BRANCH}_${DATE}_v${VERSION}"

        echo "🏷️ Creating tag: $TAG_NAME"
        git tag -a "$TAG_NAME" -m "Release $TAG_NAME"

        echo "📤 Pushing tag to origin..."
        # 设置默认值
        echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
        
        if git push origin $TAG_NAME; then
          echo "✅ Tag $TAG_NAME pushed successfully"
          echo "tag_created=true" >> "$GITHUB_OUTPUT"
        else
          echo "❌ Failed to push tag $TAG_NAME"
          echo "tag_created=false" >> "$GITHUB_OUTPUT"
          echo "tag_name=" >> "$GITHUB_OUTPUT"  # 清除标签名称，因为创建失败
          exit 1
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        INPUT_PREFIX: ${{ inputs.prefix }}
        GIT_USER_NAME: ${{ inputs.git_user_name }}
        GIT_USER_EMAIL: ${{ inputs.git_user_email }}
