name: 'Build and Tag'
description: 'Creates versioned tags with date prefix for releases'
author: 'chengzao'

inputs:
  token:
    description: 'GitHub token for creating tags and changelog'
    required: true
  prefix:
    description: 'Prefix name to use in tag name'
    required: false
    default: 'release'
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
  create_changelog:
    description: 'Whether to create changelog using changelogithub'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Validate Node.js environment
      run: |
        if ! command -v node &> /dev/null; then
          echo "‚ùå Node.js is not installed or not in PATH"
          exit 1
        fi

        if ! command -v npm &> /dev/null; then
          echo "‚ùå npm is not installed or not in PATH"
          exit 1
        fi

        echo "‚úÖ Node.js environment validation passed"
        echo "üì¶ Node.js version: $(node --version)"
        echo "üì¶ npm version: $(npm --version)"
      shell: bash

    - name: Create a release tag
      id: create_tag
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'

        # ÂΩìÊó•Êó•Êúü
        DATE=$(date +"%Y_%m_%d")

        # ÂàÜÊîØÂêçÁß∞
        CURRENT_BRANCH="${{ inputs.prefix }}"

        # Ëé∑ÂèñÊúÄÊñ∞ÁâàÊú¨Âè∑
        LATEST_TAG=$(git tag -l "${CURRENT_BRANCH}_${DATE}_v*" | sort -V | tail -n1)
        # Â¶ÇÊûú‰ªäÂ§©ËøòÊ≤°ÊúâÁâàÊú¨, ‰ªév1ÂºÄÂßã
        if [ -z "$LATEST_TAG" ]; then
            VERSION=1
        else
            # ÊèêÂèñÁé∞ÊúâÁöÑÊúÄÂ§ßÁâàÊú¨
            VERSION=${LATEST_TAG#*v}
            # ÈÄíÂ¢ûÁâàÊú¨Âè∑
            ((VERSION++))
        fi

        # ÂàõÂª∫Êñ∞ÁöÑÊ†áÁ≠æÂêç
        TAG_NAME="${CURRENT_BRANCH}_${DATE}_v${VERSION}"

        echo "üè∑Ô∏è Creating tag: $TAG_NAME"
        git tag -a "$TAG_NAME" -m "Release $TAG_NAME"

        echo "üì§ Pushing tag to origin..."
        if git push origin $TAG_NAME; then
          echo "‚úÖ Tag $TAG_NAME pushed successfully"
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
        else
          echo "‚ùå Failed to push tag $TAG_NAME"
          exit 1
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Create Changelog
      if: inputs.create_changelog == 'true' && steps.create_tag.outputs.tag_name != ''
      run: |
        echo "üìù Creating changelog..."
        if npx changelogithub; then
          echo "‚úÖ Changelog created successfully"
        else
          echo "‚ö†Ô∏è Failed to create changelog, but continuing..."
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}